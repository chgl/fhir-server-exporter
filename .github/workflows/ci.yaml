name: ci

on:
  push:
    branches: [master]
  release:
    types: [created]
  pull_request:
    branches: [master]

permissions: read-all

jobs:
  build:
    uses: chgl/.github/.github/workflows/standard-build.yaml@6383b42afa6c8781777fcfff027dbc046d1cbb5c # v1.6.4
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: true
      enable-upload-test-image: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    uses: chgl/.github/.github/workflows/standard-lint.yaml@6383b42afa6c8781777fcfff027dbc046d1cbb5c # v1.6.4
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      codeql-languages: '["csharp"]'
      enable-codeql: true
      enable-verify-base-image-signature: false
      enable-validate-gradle-wrapper: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs:
      - build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download image
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker load --input /tmp/image.tar

      - name: Install .NET
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: "8.x"

      - name: Run E2E tests with newly built container image
        env:
          FHIR_SERVER_EXPORTER_E2E_TEST_IMAGE: ${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}
        run: |
          dotnet restore src/FhirServerExporter.Tests.E2E/
          dotnet test src/FhirServerExporter.Tests.E2E/

  release:
    uses: chgl/.github/.github/workflows/standard-release.yaml@6383b42afa6c8781777fcfff027dbc046d1cbb5c # v1.6.4
    needs:
      - build
      - test
    permissions:
      contents: write
      pull-requests: write
      issues: write
    secrets:
      semantic-release-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

  copy-image-to-dockerhub:
    name: copy ghcr.io image to DockerHub
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4
      - name: Login to DockerHub
        env:
          DOCKERHUB_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"
        run: |
          echo "${DOCKERHUB_TOKEN}" | crane auth login docker.io --username chgl --password-stdin
      - name: Copy all tags
        env:
          TAGS: ${{ needs.build.outputs.image-tags }}
        run: |
          echo "${TAGS}" | while read -r tag; do crane copy "$tag" "${tag/ghcr.io/docker.io}"; done
