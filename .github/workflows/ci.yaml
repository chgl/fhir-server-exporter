name: ci

on:
  push:
    branches:
      - master
  release:
    types:
      - created
  pull_request:
    branches:
      - master
  merge_group:
    types:
      - checks_requested

permissions:
  contents: read

jobs:
  build:
    uses: chgl/.github/.github/workflows/standard-build.yaml@ff33c625aa681101ebd3e7fbb455cec43e6e751f # v1.10.60
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      enable-build-test-layer: true
      enable-upload-test-image: false
      platforms: |
        linux/amd64
        linux/arm64
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    uses: chgl/.github/.github/workflows/standard-lint.yaml@ff33c625aa681101ebd3e7fbb455cec43e6e751f # v1.10.60
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      codeql-languages: '["csharp"]'
      enable-codeql: true
      enable-verify-base-image-signature: false
      enable-validate-gradle-wrapper: false
      dotnet-version: 9.0.x
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: test
    needs:
      - build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: Set up containerd image store
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker

          docker info -f '{{ .DriverStatus }}'

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        if: ${{ github.event_name == 'pull_request' }}
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker load --input /tmp/image.tar

      - name: Install .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: "9.x"

      - name: Run E2E tests with newly built container image
        env:
          FHIR_SERVER_EXPORTER_E2E_TEST_IMAGE: ${{ fromJson(needs.build.outputs.image-meta-json).tags[0] }}
        run: |
          dotnet restore --locked-mode src/FhirServerExporter.Tests.E2E/
          dotnet test src/FhirServerExporter.Tests.E2E/

  copy-image-to-dockerhub:
    name: copy ghcr.io image to DockerHub
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4
      - name: Login to DockerHub
        env:
          DOCKERHUB_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"
        run: |
          echo "${DOCKERHUB_TOKEN}" | crane auth login docker.io --username chgl --password-stdin
      - name: Copy all tags
        env:
          TAGS: ${{ needs.build.outputs.image-tags }}
        run: |
          echo "${TAGS}" | while read -r tag; do crane copy "$tag" "${tag/ghcr.io/docker.io}"; done
